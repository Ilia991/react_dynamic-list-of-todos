{"version":3,"sources":["api.ts","types/sort.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","SortEnum","TodoList","todos","userId","setUserId","setTodo","className","map","todo","id","completed","classNames","title","type","onClick","TodoFilter","select","setSelect","search","setSearch","value","onChange","e","target","ALL","ACTIVE","COMPLETED","placeholder","style","pointerEvents","Loader","TodoModal","user","undefined","href","email","App","useState","setTodos","setUser","useEffect","itemTodos","getUser","userApi","arr","selectFilter","textFilter","length","filter","item","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f6a79cf4.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","export enum SortEnum {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype TodoListProps = {\n  todos:Todo[];\n  userId:number;\n  setUserId:React.Dispatch<React.SetStateAction<number>>;\n  setTodo:React.Dispatch<React.SetStateAction<Todo | undefined>>;\n};\n\nexport const TodoList: React.FC<TodoListProps> = ({\n  todos,\n  userId,\n  setUserId,\n  setTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr data-cy=\"todo\" className=\"\" key={todo.id}>\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p className={classNames(\n              { 'has-text-danger': !todo.completed },\n              { 'has-text-success': todo.completed },\n            )}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => {\n                setUserId(todo.userId);\n                setTodo(todo);\n              }}\n            >\n              <span className=\"icon\">\n                <i className={classNames(\n                  'far',\n                  { 'fa-eye': !userId },\n                  { 'fa-eye-slash': userId },\n                )}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import { SortEnum } from '../../types/sort';\n\ntype TodoFilterProprs = {\n  select:SortEnum;\n  setSelect:React.Dispatch<React.SetStateAction<SortEnum>>;\n  search:string;\n  setSearch:React.Dispatch<React.SetStateAction<string>>;\n};\n\nexport const TodoFilter: React.FC<TodoFilterProprs> = ({\n  select,\n  setSelect,\n  search,\n  setSearch,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={select}\n          onChange={(e) => setSelect(e.target.value as SortEnum)}\n        >\n          <option value={SortEnum.ALL}>All</option>\n          <option value={SortEnum.ACTIVE}>Active</option>\n          <option value={SortEnum.COMPLETED}>Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={search}\n        onChange={(e) => setSearch(e.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {search && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => setSearch('')}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ntype TodoModalProps = {\n  user:User | undefined;\n  todo:Todo | undefined;\n  setUserId:React.Dispatch<React.SetStateAction<number>>;\n  setTodo:React.Dispatch<React.SetStateAction<Todo | undefined>>;\n};\n\nexport const TodoModal: React.FC<TodoModalProps > = ({\n  user,\n  todo,\n  setUserId,\n  setTodo,\n}) => {\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {user && todo ? (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                setTodo(undefined);\n                setUserId(0);\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                Leanne Graham\n              </a>\n            </p>\n          </div>\n        </div>\n      ) : (\n        <Loader />\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState, useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { getTodos, getUser } from './api';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { User } from './types/User';\nimport { SortEnum } from './types/sort';\n\nexport const App: React.FC = () => {\n  const [select, setSelect] = useState(SortEnum.ALL);\n  const [search, setSearch] = useState('');\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [user, setUser] = useState<User>();\n  const [userId, setUserId] = useState(0);\n  const [todo, setTodo] = useState<Todo>();\n\n  useEffect(() => {\n    getTodos().then(itemTodos => setTodos(itemTodos));\n    getUser(userId).then(userApi => setUser(userApi));\n  }, [userId]);\n\n  const funcTodoFilter = (arr:Todo[], selectFilter:string, textFilter:string) => {\n    const items = [...arr];\n    const selectItems = items.filter(item => {\n      switch (selectFilter) {\n        case SortEnum.ALL:\n          return item;\n\n        case SortEnum.ACTIVE:\n          return item.completed === false;\n\n        case SortEnum.COMPLETED:\n          return item.completed === true;\n\n        default:\n          return item;\n      }\n    });\n\n    return selectItems.filter(item => item.title.includes(textFilter));\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                select={select}\n                setSelect={setSelect}\n                search={search}\n                setSearch={setSearch}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length === 0 ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  todos={funcTodoFilter(todos, select, search)}\n                  userId={userId}\n                  setUserId={setUserId}\n                  setTodo={setTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {userId > 0 && (\n        <TodoModal\n          user={user}\n          todo={todo}\n          setUserId={setUserId}\n          setTodo={setTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}